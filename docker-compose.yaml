version: '3.8'

services:
  # PostgreSQL service (unchanged)
  postgres:
    image: postgres:15
    container_name: my_postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Fixed LocalStack service
  localstack:
    image: localstack/localstack:latest
    container_name: s3-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - AWS_DEFAULT_REGION=us-east-1  # Updated from DEFAULT_REGION
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - BUCKET_NAME=my-bucket  # Updated from DEFAULT_BUCKET_NAME
      # CORS configuration
      - DISABLE_CORS_CHECKS=1  # Disable CORS checks completely
      # Alternative CORS configuration if you want more control
      # - CORS_ALLOW_ORIGIN=*
      # - CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,HEAD,OPTIONS
      # - CORS_ALLOW_HEADERS=*
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4566/_localstack/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot app (unchanged)
  fpis-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fpis-app
    restart: always
    ports:
      - "8082:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/mydatabase
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=mypassword
      - AWS_ACCESS_KEY=test
      - AWS_SECRET_KEY=test
      - AWS_S3_BUCKET=my-bucket
      - AWS_S3_REGION=us-east-1
      - AWS_S3_ENDPOINT=http://localstack:4566
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: